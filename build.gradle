/*
 */
 
apply plugin: 'java'

repositories {
	jcenter()
	maven { url 'https://dl.bintray.com/content/simonpoole/osm' }
}

ext {
	preset_file = 'master_preset.xml'
}

dependencies {
	runtime 'ch.poole:preset-utils:0.0.3'
	runtime 'commons-cli:commons-cli:1.4'
}

task copyCss(type: Copy) {
	from zipTree(project.configurations.runtime.filter{it.name.startsWith('preset-utils')}.singleFile)
    include "preset.css"
    into new File(projectDir.getPath() + '/website')
}

task updateWebsite(dependsOn: ["copyCss"], type: JavaExec) {
    main = "ch.poole.osm.presetutils.Preset2Html"
    classpath = configurations.runtime
    args('-input',    preset_file,
    	 '-output',   'index.html',
    	 '-vespucci', 'https://github.com/simonpoole/' + project.name + '/raw/master/gen/vespucci_zip.zip', 
    	 '-josm',     'https://github.com/simonpoole/' + project.name + '/raw/master/gen/josm.zip')
}
updateWebsite.group = 'preset utils'
updateWebsite.description = 'Update the website'

task updatePot(type: JavaExec) {
    main = "ch.poole.osm.presetutils.Preset2Pot"
    classpath = configurations.runtime
    args('-input',  preset_file,
    	 '-output', 'i18n/preset.pot')
}
updatePot.group = 'preset utils'
updatePot.description = 'Update the translation template'

task updateTranslations(type: Exec) {
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    	commandLine 'cmd', '/c', 'tx.exe', 'pull', '-a'
	} else {
    	commandLine 'tx', 'pull', '-a'
	}
}
updateTranslations.group = 'transifex'
updateTranslations.description = 'Update translations by executing the transifex tx utility'


